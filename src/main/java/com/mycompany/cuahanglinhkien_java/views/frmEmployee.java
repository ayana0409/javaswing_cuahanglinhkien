/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.cuahanglinhkien_java.views;

import com.mycompany.cuahanglinhkien_java.controllers.EmployeeController;
import com.mycompany.cuahanglinhkien_java.controllers.RoleController;
import com.mycompany.cuahanglinhkien_java.models.Employee;
import com.mycompany.cuahanglinhkien_java.models.Role;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;
import static share.utils.PhoneNumberUtils.checkPhoneNumber;

/**
 *
 * @author YEN VY
 */
public class frmEmployee extends javax.swing.JFrame {

    private final EmployeeController employeecontroller=new EmployeeController();
    private final RoleController roleController = new RoleController();
    String[] columnNames = {"Mã nhân viên","Chức vụ", "Họ & tên", "Ngày sinh", "Giới tính", "Số điện thoại", "Trạng thái", "Tên đăng nhập"};
    DefaultTableModel model = new DefaultTableModel(columnNames,0);
    DefaultComboBoxModel<Role> roleModel = new DefaultComboBoxModel<>();
    List<Role> roleList;
    int selected =-1;
    /**
     * Creates new form frmEmployee
     */
    public frmEmployee() {
        initComponents();
        tbEmployee.setModel(model);
        
        roleList = roleController.getRole();
        roleList.forEach(r -> roleModel.addElement(r));
        cbRole.setModel(roleModel);
        
        ButtonGroup gr = new ButtonGroup();
        gr.add(rbGenderBoy);
        gr.add(rbGenderGirl);
        
        loadData();
        addEvent();
        clearInput();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel23 = new javax.swing.JPanel();
        txtID = new javax.swing.JTextField();
        txtPhoneNumber = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        rbGenderBoy = new javax.swing.JRadioButton();
        rbGenderGirl = new javax.swing.JRadioButton();
        jPanel13 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        spBirthday = new javax.swing.JSpinner();
        jPanel7 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jPanel20 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        jPanel15 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        cbStatus = new javax.swing.JComboBox<>();
        jPanel19 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        cbRole = new javax.swing.JComboBox<>();
        jPanel14 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEditPassword = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbEmployee = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 126, 242));
        jPanel1.setPreferredSize(new java.awt.Dimension(960, 640));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("QUẢN LÝ NHÂN VIÊN");
        jLabel10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel1.add(jLabel10, java.awt.BorderLayout.PAGE_START);

        jPanel3.setBackground(new java.awt.Color(204, 255, 255));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(225, 592));
        jPanel2.setLayout(new java.awt.GridLayout(9, 0, 0, 2));

        jPanel5.setBackground(new java.awt.Color(204, 255, 255));
        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel22.setBackground(new java.awt.Color(204, 255, 255));
        jPanel22.setLayout(new java.awt.GridLayout(2, 0));

        jLabel1.setText("Mã ");
        jPanel22.add(jLabel1);

        jLabel3.setText("Số điện thoại ");
        jPanel22.add(jLabel3);

        jPanel5.add(jPanel22, java.awt.BorderLayout.LINE_START);

        jPanel23.setBackground(new java.awt.Color(204, 255, 255));
        jPanel23.setLayout(new java.awt.GridLayout(2, 0, 0, 4));

        txtID.setFocusable(false);
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });
        jPanel23.add(txtID);

        txtPhoneNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneNumberActionPerformed(evt);
            }
        });
        jPanel23.add(txtPhoneNumber);

        jPanel5.add(jPanel23, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel5);

        jPanel6.setBackground(new java.awt.Color(204, 255, 255));
        jPanel6.setLayout(new java.awt.GridLayout(2, 2, 5, 5));

        jLabel2.setText("Họ & Tên");
        jPanel6.add(jLabel2);
        jPanel6.add(txtName);

        jPanel2.add(jPanel6);

        jPanel8.setBackground(new java.awt.Color(204, 255, 255));
        jPanel8.setLayout(new java.awt.GridLayout(2, 3));

        jPanel10.setBackground(new java.awt.Color(204, 255, 255));
        jPanel10.setLayout(new java.awt.GridLayout(1, 3, 3, 0));

        jLabel4.setText("Giới tính");
        jPanel10.add(jLabel4);

        rbGenderBoy.setBackground(new java.awt.Color(204, 255, 255));
        rbGenderBoy.setText("Nam");
        jPanel10.add(rbGenderBoy);

        rbGenderGirl.setBackground(new java.awt.Color(204, 255, 255));
        rbGenderGirl.setText("Nữ");
        jPanel10.add(rbGenderGirl);

        jPanel8.add(jPanel10);

        jPanel13.setBackground(new java.awt.Color(204, 255, 255));
        jPanel13.setLayout(new java.awt.GridLayout(1, 4, 2, 0));

        jLabel6.setText("Ngày sinh");
        jPanel13.add(jLabel6);

        spBirthday.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, new java.util.Date(), java.util.Calendar.DAY_OF_MONTH));
        jPanel13.add(spBirthday);

        jPanel8.add(jPanel13);

        jPanel2.add(jPanel8);

        jPanel7.setBackground(new java.awt.Color(204, 255, 255));
        jPanel7.setLayout(new java.awt.GridLayout(2, 2, 5, 5));

        jLabel11.setText("Địa chỉ");
        jPanel7.add(jLabel11);
        jPanel7.add(txtAddress);

        jPanel2.add(jPanel7);

        jPanel20.setBackground(new java.awt.Color(204, 255, 255));
        jPanel20.setLayout(new java.awt.GridLayout(2, 0, 0, 3));

        jLabel8.setText("Tên đăng nhập");
        jPanel20.add(jLabel8);
        jPanel20.add(txtUserName);

        jPanel2.add(jPanel20);

        jPanel15.setBackground(new java.awt.Color(204, 255, 255));
        jPanel15.setLayout(new java.awt.GridLayout(2, 1, 3, 5));

        jLabel7.setText("Mật khẩu");
        jPanel15.add(jLabel7);
        jPanel15.add(txtPassword);

        jPanel2.add(jPanel15);

        jPanel9.setBackground(new java.awt.Color(204, 255, 255));
        jPanel9.setLayout(new java.awt.GridLayout(2, 0));

        jPanel18.setBackground(new java.awt.Color(204, 255, 255));
        jPanel18.setLayout(new java.awt.GridLayout(1, 2, 3, 0));

        jLabel5.setText("Trạng thái");
        jPanel18.add(jLabel5);

        cbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Đang làm", "Nghỉ phép", "Thôi việc", "Nghỉ thai sản", "Đang thử việc ", " " }));
        jPanel18.add(cbStatus);

        jPanel9.add(jPanel18);

        jPanel19.setBackground(new java.awt.Color(204, 255, 255));
        jPanel19.setLayout(new java.awt.GridLayout(1, 2, 3, 0));

        jLabel9.setText("Chức vụ");
        jPanel19.add(jLabel9);

        jPanel19.add(cbRole);

        jPanel9.add(jPanel19);

        jPanel2.add(jPanel9);

        jPanel14.setBackground(new java.awt.Color(204, 255, 255));
        jPanel14.setLayout(new java.awt.GridLayout(2, 0, 0, 3));

        jPanel17.setLayout(new java.awt.GridLayout(1, 0));
        jPanel17.add(txtSearch);

        jPanel14.add(jPanel17);

        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        jPanel14.add(btnSearch);

        jPanel2.add(jPanel14);

        jPanel12.setBackground(new java.awt.Color(204, 255, 255));
        jPanel12.setLayout(new java.awt.GridLayout(2, 0, 0, 4));

        jPanel16.setLayout(new java.awt.GridLayout(1, 0));

        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel16.add(btnAdd);

        btnEdit.setText("Sửa");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        jPanel16.add(btnEdit);

        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel16.add(btnDelete);

        jPanel12.add(jPanel16);

        btnEditPassword.setText("Đổi mật khẩu");
        btnEditPassword.setActionCommand("");
        btnEditPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditPasswordActionPerformed(evt);
            }
        });
        jPanel12.add(btnEditPassword);

        jPanel2.add(jPanel12);

        jPanel3.add(jPanel2, java.awt.BorderLayout.LINE_END);

        jPanel4.setBackground(new java.awt.Color(204, 255, 255));

        tbEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbEmployee);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 729, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel4, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel3, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPhoneNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhoneNumberActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String name=txtName.getText();
        String gender=rbGenderBoy.isSelected()?"Nam":"Nữ";
        String address=txtAddress.getText();
        String status=cbStatus.getSelectedItem().toString();
        String userName=txtUserName.getText();
        String password=txtPassword.getText();
        java.util.Date fromDate = (java.util.Date) spBirthday.getValue();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String fromFormat = dateFormat.format(fromDate);
        Date birthday = java.sql.Date.valueOf(fromFormat);
        int roleId= ((Role) cbRole.getSelectedItem()).getId();
        String phoneNumber=txtPhoneNumber.getText();
        if(!name.isBlank()&& !phoneNumber.isBlank() 
                && !userName.isBlank() && !password.isBlank()){
            if (checkExistEmployee(userName))
            {
                javax.swing.JOptionPane.showMessageDialog(this, "Tên đăng nhập ["+ userName +"] đã tồn tại!", 
                        "Cảnh báo", javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            if (!checkPhoneNumber(phoneNumber)){
                javax.swing.JOptionPane.showMessageDialog(this, "Số điện thoại không hợp lệ", 
                        "Cảnh báo", javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            employeecontroller.addEmployee(new Employee( name, gender, address, phoneNumber, status, userName, password, birthday, roleId));
            loadData();
            clearInput();
        }        
    // TODO add your handling code here:
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if (selected == -1){
            return;
        }
        
        String name=txtName.getText();
        String gender=rbGenderBoy.isSelected()?"Nam":"Nữ";
        String address=txtAddress.getText();
        String status=cbStatus.getSelectedItem().toString();
        String userName=txtUserName.getText();
        java.util.Date fromDate = (java.util.Date) spBirthday.getValue();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String fromFormat = dateFormat.format(fromDate);
        Date birthday = java.sql.Date.valueOf(fromFormat);
        int roleId= ((Role) cbRole.getSelectedItem()).getId();
        String phoneNumber=txtPhoneNumber.getText();
        
        Employee employee = employeecontroller.getEmployeeById(selected);
        if(!name.isBlank()&& !phoneNumber.isBlank() 
                && !userName.isBlank()){
            if (!userName.equals(employee.getUsername()) && checkExistEmployee(userName))
            {
                javax.swing.JOptionPane.showMessageDialog(this, "Tên đăng nhập ["+ userName +"] đã tồn tại!", 
                        "Cảnh báo", javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            if (!checkPhoneNumber(phoneNumber)){
                javax.swing.JOptionPane.showMessageDialog(this, "Số điện thoại không hợp lệ", 
                        "Cảnh báo", javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            employeecontroller.editInforEmployee(new Employee( name, gender, address, phoneNumber, status, userName, "a", birthday, roleId),selected);
            loadData();
            clearInput();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
    
        int selectedRow = tbEmployee.getSelectedRow();
        if (selectedRow == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Vui lòng chọn một nhân viên để xóa!", "Cảnh báo", javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Lấy ID của danh mục được chọn từ bảng
        String empIDStr = model.getValueAt(selectedRow, 0).toString();
        int id;
        try {
            id = Integer.parseInt(empIDStr);
        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "ID Nhân viên không hợp lệ!", "Lỗi", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Xác nhận hành động xóa với người dùng
        int confirm = javax.swing.JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa nhân viên này?", "Xác nhận xóa", javax.swing.JOptionPane.YES_NO_OPTION);
        if (confirm != javax.swing.JOptionPane.YES_OPTION) {
            return;
        }

        // Gọi phương thức xóa danh mục từ controller
        boolean success = employeecontroller.deleteEmployee(id);
        if (success) {
            javax.swing.JOptionPane.showMessageDialog(this, "Xóa nhân viên thành công!", "Thông báo", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            loadData();  // Tải lại dữ liệu bảng
            clearInput(); // Xóa trường nhập liệu
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Xóa nhân viên thất bại!", "Lỗi", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed

        try {
            String searchQuery =txtSearch.getText();
            if (searchQuery.isEmpty()) {
                loadData();
                return;
            }
            List<Employee> searchResults = employeecontroller.searchEmployeebyName(searchQuery);
            model.setRowCount(0);
            if (searchResults != null && !searchResults.isEmpty()) {
                for (Employee employee : searchResults) {
                    String roleName = "";
                    for(Role r : roleList){
                        if (r.getId() == employee.getRoleId()) {
                            roleName = r.getName();
                            break;
                        }
                    }
                    model.addRow(new Object[]{employee.getId(), roleName, employee.getName(), 
                            employee.getBirthday(), employee.getGender(), employee.getPhoneNumber(), 
                            employee.getStatus(), employee.getUsername()});
                }
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Không tìm thấy nhân viên nào!", "Thông báo", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi: " + ex.getMessage(), "Lỗi", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnEditPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditPasswordActionPerformed
        String password=txtPassword.getText();
        if(!password.isBlank()){
            employeecontroller.updatePasswordEmployee(password, selected);
            loadData();
            clearInput();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditPasswordActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        frmHome frmHome = new frmHome();
        frmHome.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frmHome.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    
    private void loadData() {
        // Lấy danh sách danh mục từ cơ sở dữ liệu
        List<Employee> listCate = employeecontroller.getAllEmployee();
        
        // Xóa dữ liệu cũ trong bảng
        model.setRowCount(0);

        // Sử dụng phương thức forEach để duyệt qua danh sách danh mục
        listCate.forEach(employee -> {
            String roleName = "";
            for(Role r : roleList){
                if (r.getId() == employee.getRoleId()) {
                    roleName = r.getName();
                    break;
                }
            }
            model.addRow(new Object[]{employee.getId(), roleName, employee.getName(), 
                employee.getBirthday(), employee.getGender(), employee.getPhoneNumber(), 
                employee.getStatus(), employee.getUsername()});
        });
    }
    private void addEvent() {
        tbEmployee.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
            if (!e.getValueIsAdjusting()) {
                int selectedRow = tbEmployee.getSelectedRow();
                if (selectedRow != -1) {
                    selected = Integer.parseInt(tbEmployee.getValueAt(selectedRow, 0).toString()) ;
                    Employee employee= employeecontroller.getEmployeeById(selected);
                    txtID.setText(selected+"");
                    txtName.setText(employee.getName());
                    txtPhoneNumber.setText(employee.getPhoneNumber());
                    txtAddress.setText(employee.getAddress());
                    txtUserName.setText(employee.getUsername());
                    spBirthday.setValue(employee.getBirthday());
                    rbGenderBoy.setSelected(employee.getGender().toLowerCase().equals("nam"));
                    rbGenderGirl.setSelected(employee.getGender().toLowerCase().equals("nữ"));
                    cbStatus.setSelectedItem(employee.getStatus());
                    Role existRole = new Role();
                    for(Role r : roleList){
                        if (r.getId() == employee.getRoleId()) {
                            existRole = r;
                            break;
                        }
                    }
                    cbRole.setSelectedItem(existRole);
                }
            }
        });
    }
    
    private void clearInput() {
        txtPhoneNumber.setText("");
        txtName.setText("");
        txtAddress.setText("");
        txtID.setText("");
        txtPassword.setText("");
        txtUserName.setText("");
        selected = -1;
    }
    
    private boolean checkExistEmployee(String username){
        Employee employee = employeecontroller.getEmployeeByUsername(username);
        return employee != null;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmEmployee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnEditPassword;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<Role> cbRole;
    private javax.swing.JComboBox<String> cbStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JRadioButton rbGenderBoy;
    private javax.swing.JRadioButton rbGenderGirl;
    private javax.swing.JSpinner spBirthday;
    private javax.swing.JTable tbEmployee;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
